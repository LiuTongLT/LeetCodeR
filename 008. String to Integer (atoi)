class Solution {
    public int myAtoi(String str) {
        //handle spaces
        str = str.trim();
        //handle null str
        if(str==null || str.length()==0){
            return 0;
        }
        //since double can store more value than int, handle the out of bound value 
        double result = 0;
        //handle positive or negative sign
        boolean positive = true;
        int startIndex = 0;
        if(str.charAt(0)=='-' || str.charAt(0)=='+'){
            startIndex++;
        }
        if(str.charAt(0)=='-'){
            positive = false;
        }
        for(int i = startIndex; i<str.length(); i++){
            char c = str.charAt(i);
            if(c>'9' || c<'0'){
                break;
            }
            int digitValue = (int) str.charAt(i)-'0';
            result = result*10 + digitValue;
        }
        
        if(!positive){
            result = -result;
        }
        //handle value out of bound
        if(result>Integer.MAX_VALUE){
            return Integer.MAX_VALUE;
        }
        if(result<Integer.MIN_VALUE){
            return Integer.MIN_VALUE;
        }
        
        return (int) result;
    }
}
