class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int max = 0;
        vector<char> mylist;
        for(int i = 0; i<s.length(); i++)
        {   
            char ch = s[i];
            int count = std::count(mylist.begin(), mylist.end(),ch);
            if(count==0)
            {
                mylist.push_back(ch);
            }
            else
            {
                if(max<mylist.size())
                {
                    max = mylist.size();
                }
                int pos = 0;
                int j = 0;
                for(j; j<mylist.size(); j++)
                {
                    if(mylist[j]==ch)
                    {
                        pos = j;
                    }
                }
                mylist.erase(mylist.begin(),mylist.begin()+pos+1);
                mylist.push_back(ch);
            }    
        
        }
        
        if(max<mylist.size())
            return mylist.size();
        else
            return max;
        
    }
};
